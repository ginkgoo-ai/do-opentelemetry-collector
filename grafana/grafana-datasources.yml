# Configuration file version
# See here fore more information on configuration:
# https://grafana.com/docs/grafana/latest/administration/provisioning/#example-data-source-configuration-file
apiVersion: 1

# Mark provisioned data sources for deletion if they are no longer in a provisioning file.
prune: false

# List of data sources to insert/update depending on what's available.
datasources:
  - name: Loki
    type: loki
    access: direct
    orgId: 1
    uid: grafana_loki
    url: ${RAILWAY_LOKI_URL}
    user:
    database:
    basicAuth: false
    basicAuthUser:
    withCredentials:
    isDefault: true
  - name: Prometheus
    type: prometheus
    access: proxy
    orgId: 1
    uid: grafana_prometheus
    url: ${RAILWAY_PROMETHEUS_URL}
    basicAuth: false
    editable: false
    isDefault: false
  - name: Tempo
    type: tempo
    access: proxy
    orgId: 1
    uid: grafana_tempo
    url: ${RAILWAY_TEMPO_URL}
    basicAuth: false
    isDefault: false
    # https://github.com/grafana/tempo/blob/main/example/docker-compose/shared/grafana-datasources.yaml
    # jsonData:
    #   httpMethod: GET
    #   serviceMap:
    #     datasourceUid: grafana_prometheus
    #   streamingEnabled:
    #     search: true
    #
    #
    # https://grafana.com/docs/grafana/v11.5/datasources/tempo/configure-tempo-data-source/
    jsonData:
      tracesToLogsV2:
        datasourceUid: 'grafana_loki'
        # spanStartTimeShift: '-1h'
        # spanEndTimeShift: '1h'
        filterByTraceID: true
        filterBySpanID: true
      tracesToMetrics:
        datasourceUid: 'grafana_prometheus'
        # spanStartTimeShift: '-1h'
        # spanEndTimeShift: '1h'
      serviceMap:
        datasourceUid: 'grafana_prometheus'
      nodeGraph:
        enabled: true
      search:
        hide: false
      traceQuery:
        timeShiftEnabled: true
        # spanStartTimeShift: '-1h'
        # spanEndTimeShift: '1h'
      streamingEnabled:
        search: true
  - name: Jaeger
    type: jaeger
    access: proxy
    orgId: 1
    uid: grafana_jaeger
    url: ${RAILWAY_JAEGER_URL}
    user:
    database:
    basicAuth: false
    basicAuthUser:
    withCredentials:
    isDefault: false
  - name: Zipkin
    type: zipkin
    access: proxy
    orgId: 1
    uid: grafana_zipkin
    url: ${RAILWAY_ZIPKIN_URL}
    user:
    database:
    basicAuth: false
    basicAuthUser:
    withCredentials:
    isDefault: false
    